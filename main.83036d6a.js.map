{"version":3,"sources":["scripts/main.js"],"names":["url","detailsURL","list","document","createElement","getPhones","fetch","then","response","ok","json","setTimeout","alert","status","getPhonesDetails","array","mappedArray","map","phoneId","Promise","allSettled","forEach","result","index","body","append","phones","phonesIds","phone","id","el","insertAdjacentHTML","name"],"mappings":";AAAA,aAEA,IAAMA,EAAM,wEAGNC,EAAa,oEAGbC,EAAOC,SAASC,cAAc,MAIpC,SAASC,IACAC,OAAAA,MAAMN,GACVO,KAAK,SAAAC,GACA,OAACA,EAASC,GAMPD,EAASE,OALPC,WAAW,WAChBC,MAASJ,GAAAA,OAAAA,EAASK,UACjB,OAoBX,SAASC,EAAiBC,GAClBC,IAAAA,EAAcD,EAAME,IAAI,SAAAC,GACrBZ,OAAAA,MAAM,GAAGL,OAAAA,GAAkBiB,GAAAA,OAAAA,EAAtB,UACTX,KAAK,SAAAC,GAAYA,OAAAA,EAASE,WAG/BS,QAAQC,WAAWJ,GAChBT,KAAK,SAAAC,GACJA,EAASa,QAAQ,SAACC,EAAQC,GACF,aAAlBD,EAAOT,QACTD,MAAMW,OAtChBpB,SAASqB,KAAKC,OAAOvB,GAerBG,IACGE,KAAK,SAAAmB,GACEC,IAAAA,EAAYD,EAAOT,IAAI,SAAAW,GAASA,OAAAA,EAAMC,KAE5CH,EAAOL,QAAQ,SAAAS,GACb5B,EAAK6B,mBAAmB,YAChBD,iBAAAA,OAAAA,EAAGE,KADX,oBAKFlB,EAAiBa","file":"main.83036d6a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst url = 'https://mate-academy.github.io/'\n  + 'phone-catalogue-static/api/phones.json';\n\nconst detailsURL = 'https://mate-academy.github.io/'\n  + 'phone-catalogue-static/api/phones/';\n\nconst list = document.createElement('ul');\n\ndocument.body.append(list);\n\nfunction getPhones() {\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        return setTimeout(() => {\n          alert(`${response.status}`);\n        }, 5000);\n      }\n\n      return response.json();\n    });\n}\n\ngetPhones()\n  .then(phones => {\n    const phonesIds = phones.map(phone => phone.id);\n\n    phones.forEach(el => {\n      list.insertAdjacentHTML('beforeend', `\n        <li>${el.name}</li>\n      `);\n    });\n\n    getPhonesDetails(phonesIds);\n  });\n\nfunction getPhonesDetails(array) {\n  const mappedArray = array.map(phoneId => {\n    return fetch(`${detailsURL}` + `${phoneId}.json`)\n      .then(response => response.json());\n  });\n\n  Promise.allSettled(mappedArray)\n    .then(response => {\n      response.forEach((result, index) => {\n        if (result.status === 'rejected') {\n          alert(index);\n        }\n      });\n    });\n};\n"]}